깃 브랜치 강의 수강 노트입니다.

#토스트 먹고 마저 해야징

master 브랜치에서 > br1 서브 브랜치, br2 서브 브랜치... 등 브랜치를 생성할 예정이다.
각 브랜치에서 작업한 소스는 메인 소스에 영향을 주지 않으므로 서비스 되고 있는 소스에 오류를 발생시키지 않을 수 있다.
브랜치에서 작업 완료된 소스는 master로 다시 합친다

git checkout '브랜치명' : 해당되는 '브랜치명' 으로 이동하는 명령어
ㄴ 브랜치를 생성하고 나서 부터는, git push origin '브랜치명' 으로 특정 브랜치를 지정 해 줘야 한다. 단순히 git push 로는 불가

브랜치에서 개발을 완료하고나서 master브랜치로 다시 합치는 방법
ㄴ 지난번 시간에서 배운 merge!
ㄴ 우선, git checkout master 명령어로 master 로 이동한 다음에 git merge '가져올 브랜치명' 을 통해 진행 가능하다
ㄴ Conflict 발생 시 git status를 통해 상태를 확인할 수 있다.

브랜치의 삭제
ㄴ git branch -d '브랜치명' : 로컬에서만 삭제
ㄴ git push --delete origin '브랜치명' : 서버에서도 삭제

브랜치 확인
ㄴ git branch -a : 서버와 로컬의 모든 브랜치 확인

**중요 : git checkout을 통해 브랜치 사이를 이동하기 이전에, 꼭 git commit 및 push를 통하여 변경내용을 모두 저장해야 한다
아니면 
scb@baegseungcheol-ui-MacBookAir helloGit % git checkout master
M       "Branch \352\271\203 \353\270\214\353\236\234\354\271\230"
Switched to branch 'master'

이런식으로 오류가 발생한다 (M : 다음 파일이 수정되었으니 유의하시오 Modified)

#지금부터는 브랜치 1에서 내용을 추가합니다.
#이게 보인다면, br1 이라는 뜻 이다

br1에서 master 브랜치로 코드를 merge 하는 쉬운 방법
ㄴ git checkout -p br1 '파일이름'
*원래 파일 이름을 적으면 되는데, 이상하게 한글 이름은 변경사항이 잘 체크가 되지 않는것 같다
*그래서 그냥 git checkout -p br1 명령어를 통해 br1에서 변경된 모든 파일들의 코드를 merge 했다 (파일이름을 안가져오면 몽땅 가져오게 된다)

이제 br1을 담당하던 담당자가 master의 코드를 다시 가져오기 위해서는, git pull 한번 한 다음에 > git checkout -p master '파일이름' 을 진행하면된다

git pull을 하면 br1,br2등의 브랜치 말고 항상 master 브랜치의 코드만 다운로드 받게 된다.
그러면 서버의 특정 브랜치만 최신 코드를 가져오는 방법?
ㄴ 최초 : git checkout -t origin/'브랜치명'
ㄴ 가져오고 나서 pull 하기 위해서는 : git pull origin '브랜치명'

github에서 같은 readonly > WRITE권한까지 부여하려면 > Collaborator 셋팅에서 한 유저에게 권한을 부여해주면 된다

#3번째 강의 수강 완료
#조금 쉬었다가 4번째 GIT 강의를 듣자